# yaml-language-server: $schema=https://frame.epfl.ch/schema

hybrid_model:
  created: 2000-12-31 # (date, optional) Date when the hybrid was created. (e.g. 2000-12-31).
  description: "" # (str) Summarized description of the hybrid model. Can be formatted with HTML tags.
  hidden: false # (bool, optional) Indicates whether the hybrid model is hidden within the FRAME library. Hidden models remain accessible if their ID is known.
  id: "" # (str) Short name that serves as unique identifier for the hybrid model. Should be all lowercase and contain no spaces (use "_" instead) or special characters.
  keywords: # (list) List of keywords that describe the hybrid model.
    - "" # (str)
  name: "" # (str) Full name of the hybrid model.
  contributors: # (list) List of contributor names.
    - "" # (str)
  documentation: # (list, optional) List of URLs or DOIs for documentation.
    - "" # (str)
  identifier: "" # (str, optional) Digital Object Identifier (DOI).
  license: "" # (str, optional) License short name.
  readme: "" # (str, optional) URL to a Markdown README file.
  url: "" # (str) Repository URL.
  version: "" # (str, optional) Semantic version.
  ml_process: "" # (str, optional)
  host_physics: "" # (str, optional)
  latent_variables: # (list, optional)
    - name: "" # (str)
      encoding_format: "" # (str, optional)
      identifier: "" # (str, optional)
      url: "" # (str, optional)
      quality: # (int | str, optional)
      units: "" # (str, optional)
      precision: "" # (str, optional)
      scale: 0 # (float | int, optional)
      offset: 0 # (float | int, optional)
      description: "" # (str, optional)
      min_value: 0 # (float | int, optional)
      max_value: 0 # (float | int, optional)
      temporal_coverage: # (str | date, optional)
      spatial_coverage: "" # (str, optional)
      spatial_resolution: "" # (str, optional)
      temporal_resolution: "" # (str, optional)
  computational_environment: # (list, optional)
    - type: conda # "conda" | "python_requirements" | "pyproject_toml"
      file_paths: # (list) List of file paths that contain the environment description, relative to the repository root.
        - "" # (str)

physics_based_components: # (list, multiple possible types shown below, optional)
  - id: "" # (str) ID of a component defined in another metadata file, that is compatible with the hybrid model defined in this file. Only the ID is required, the other fields should not be set.
  - description: "" # (str) Summarized description of the component. Can be formatted with HTML tags.
    created: 2000-12-31 # (date, optional) Date when the component was created (e.g. 2000-12-31). If not provided, will be filled with the associated hybrid model's creation date.
    id: "" # (str) Short name that serves as unique identifier for the component. Should be all lowercase and contain no spaces (use "_" instead) or special characters.
    keywords: # (list, optional) List of keywords that describe the hybrid model. If not provided, will be filled with the associated hybrid model's keywords.
      - "" # (str)
    name: "" # (str) Full name of the component.
    contributors: # (list, optional) List of contributor names. If not provided, will be filled with the associated hybrid model's contributors.
      - "" # (str)
    documentation: # (list, optional) List of URLs or DOIs for documentation. If not provided, will be filled with the associated hybrid model's list of documentation.
      - "" # (str)
    identifier: "" # (str, optional) Digital Object Identifier (DOI). If not provided, will be filled with the associated hybrid model's DOI.
    license: "" # (str, optional) License short name. If not provided, will be filled with the associated hybrid model's license.
    readme: "" # (str, optional) URL to a Markdown README file. If not provided, will be filled with the associated hybrid model's README URL.
    url: "" # (str, optional) Repository URL. If not provided, will be filled with the associated hybrid model's repository URL.
    version: "" # (str, optional) Semantic version. If not provided, will be filled with the associated hybrid model's version.
    type: "" # (str, optional)
    fixed_parameters_count: 0 # (int, optional)
    tunable_parameters_count: 0 # (int, optional)
    state_variables_count: 0 # (int, optional)
    temporal_coverage: # (str | date, optional)
    spatial_coverage: "" # (str, optional)
    spatial_resolution: "" # (str, optional)
    temporal_resolution: "" # (str, optional)
    vertical_discretization: # (optional)
      soil: "" # (str, optional)
      vegetation: "" # (str, optional)
    lateral_flow: false # (bool, optional)
    related_identifiers: # (list, optional)
      - "" # (str)
    testing_resources: # (optional)
      cpus: # (list, optional)
        - model: "" # (str)
          count: 0 # (int, optional)
          manufacturer: "" # (str, optional)
          cores: 0 # (int, optional)
          threads: 0 # (int, optional)
          cache: "" # (str, optional)
          clock_speed: "" # (str, optional)
      gpus: # (list, optional)
        - model: "" # (str)
          count: 0 # (int, optional)
          manufacturer: "" # (str, optional)
          memory: "" # (str, optional)
          memory_bandwidth: "" # (str, optional)
          clock_speed: "" # (str, optional)
          cuda_cores: 0 # (int, optional)
          tensor_cores: 0 # (int, optional)
          rt_cores: 0 # (int, optional)
          ray_tracing: false # (bool, optional)
      memory: "" # (str, optional)
      storage: "" # (str, optional)
      software: # (list, optional)
        - "" # (str)
      operating_system: "" # (str, optional)
      compute_time: "" # (str, optional)

machine_learning_components: # (list, multiple possible types shown below, optional)
  - id: "" # (str) ID of a component defined in another metadata file, that is compatible with the hybrid model defined in this file. Only the ID is required, the other fields should not be set.
  - description: "" # (str) Summarized description of the component. Can be formatted with HTML tags.
    created: 2000-12-31 # (date, optional) Date when the component was created (e.g. 2000-12-31). If not provided, will be filled with the associated hybrid model's creation date.
    id: "" # (str) Short name that serves as unique identifier for the component. Should be all lowercase and contain no spaces (use "_" instead) or special characters.
    keywords: # (list, optional) List of keywords that describe the hybrid model. If not provided, will be filled with the associated hybrid model's keywords.
      - "" # (str)
    name: "" # (str) Full name of the component.
    contributors: # (list, optional) List of contributor names. If not provided, will be filled with the associated hybrid model's contributors.
      - "" # (str)
    documentation: # (list, optional) List of URLs or DOIs for documentation. If not provided, will be filled with the associated hybrid model's list of documentation.
      - "" # (str)
    identifier: "" # (str, optional) Digital Object Identifier (DOI). If not provided, will be filled with the associated hybrid model's DOI.
    license: "" # (str, optional) License short name. If not provided, will be filled with the associated hybrid model's license.
    readme: "" # (str, optional) URL to a Markdown README file. If not provided, will be filled with the associated hybrid model's README URL.
    url: "" # (str, optional) Repository URL. If not provided, will be filled with the associated hybrid model's repository URL.
    version: "" # (str, optional) Semantic version. If not provided, will be filled with the associated hybrid model's version.
    ml_process: "" # (str, optional)
    neural_networks: # (list, optional)
      - name: "" # (str)
        type: "" # (str, optional)
        layer_count: 0 # (int, optional)
        node_count: 0 # (int, optional)
        batch_size: 0 # (int, optional)
        learning_rate: 0.0 # (float, optional)
        predictor_count: 0 # (int, optional)
        activation_functions: # (list, optional)
          - "" # (str)
        input_scaling: "" # (str, optional)
        initialization: "" # (str, optional)
        loss_function: "" # (str, optional)
        regularization: "" # (str, optional)
        optimization_method: "" # (str, optional)
        host_physics_model: "" # (str, optional)
        target_variables: # (list, optional)
          - "" # (str)
        training_requirements: # (optional)
          gpu: false # (bool, optional)
          cpu: false # (bool, optional)
        training_resources: # (optional)
          cpus: # (list, optional)
            - model: "" # (str)
              count: 0 # (int, optional)
              manufacturer: "" # (str, optional)
              cores: 0 # (int, optional)
              threads: 0 # (int, optional)
              cache: "" # (str, optional)
              clock_speed: "" # (str, optional)
          gpus: # (list, optional)
            - model: "" # (str)
              count: 0 # (int, optional)
              manufacturer: "" # (str, optional)
              memory: "" # (str, optional)
              memory_bandwidth: "" # (str, optional)
              clock_speed: "" # (str, optional)
              cuda_cores: 0 # (int, optional)
              tensor_cores: 0 # (int, optional)
              rt_cores: 0 # (int, optional)
              ray_tracing: false # (bool, optional)
          memory: "" # (str, optional)
          storage: "" # (str, optional)
          software: # (list, optional)
            - "" # (str)
          operating_system: "" # (str, optional)
          compute_time: "" # (str, optional)

data: # (optional)
  inputs: # (list, optional)
    - name: "" # (str)
      encoding_format: "" # (str, optional)
      identifier: "" # (str, optional)
      url: "" # (str, optional)
      quality: # (int | str, optional)
      units: "" # (str, optional)
      precision: "" # (str, optional)
      scale: 0 # (float | int, optional)
      offset: 0 # (float | int, optional)
      description: "" # (str, optional)
      min_value: 0 # (float | int, optional)
      max_value: 0 # (float | int, optional)
      temporal_coverage: # (str | date, optional)
      spatial_coverage: "" # (str, optional)
      spatial_resolution: "" # (str, optional)
      temporal_resolution: "" # (str, optional)
  outputs: # (list, optional)
    - name: "" # (str)
      encoding_format: "" # (str, optional)
      identifier: "" # (str, optional)
      url: "" # (str, optional)
      quality: # (int | str, optional)
      units: "" # (str, optional)
      precision: "" # (str, optional)
      scale: 0 # (float | int, optional)
      offset: 0 # (float | int, optional)
      description: "" # (str, optional)
      min_value: 0 # (float | int, optional)
      max_value: 0 # (float | int, optional)
      temporal_coverage: # (str | date, optional)
      spatial_coverage: "" # (str, optional)
      spatial_resolution: "" # (str, optional)
      temporal_resolution: "" # (str, optional)