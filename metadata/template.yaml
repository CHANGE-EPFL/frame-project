# A template for FAIR hybrid models

hybrid_model:
  general:
    contributors:
      - {type: string, required: true}
      - {type: string, required: true}
    description: {type: string, required: true}
    documentation: {type: string, required: true}
    doi: {type: string, required: false}
    keywords:
      - {type: string, required: true}
    license: {type: string, required: true}
    name: {type: string, required: true}
    repository: {type: string, required: true}
    version: {type: string, required: true}
  ml_process: {type: string, required: true}
  host_physics: {type: string, required: true}
  latent_variable: {type: string, required: true}

physics_based_component:
  general:
    description: {type: string, required: true}
    documentation: {type: string, required: true}
    doi: {type: string, required: false}
    keywords:
      - {type: string, required: true}
    license: {type: string, required: true}
    name: {type: string, required: true}
    repository: {type: string, required: true}
    version: {type: string, required: true}
  type: {type: string, required: true}
  parameters:
    number_fixed: {type: integer, required: true}
    number_tunable: {type: integer, required: true}
  coverage:
    spatial: {type: string, required: true}
    temporal: {type: string, required: true}
  vertical_discretization:
    soil: {type: integer, required: true}
    vegetation: {type: integer, required: true}
  resolution:
    temporal: {type: integer, required: true}
  lateral_flow: {type: boolean, required: true}
  number_state_variables: {type: integer, required: true}
  # equations_doi:
  #   - {type: string, required: true}
  # Modules
  resources_tested:
    compute_time: {type: string, required: true}
    memory: {type: string, required: true}
    storage: {type: string, required: true}
    gpu: {type: string, required: true}
    cpu: {type: string, required: true}
    software: {type: string, required: true}

machine_learning_component:
  general:
    description: {type: string, required: true}
    documentation: {type: string, required: true}
    doi: {type: string, required: false}
    keywords:
      - {type: string, required: true}
    license: {type: string, required: true}
    name: {type: string, required: true}
    repository: {type: string, required: true}
    version: {type: string, required: true}
  type: {type: string, required: true}
  # If type == "NN"
  nn_type: {type: string, required: false}
  number_layers: {type: integer, required: false}
  number_predictors: {type: integer, required: false}
  activation_function: {type: string, required: false}
  input_scaling: {type: string, required: false}
  initialization: {type: string, required: false}
  loss_function: {type: string, required: false}
  regularization: {type: string, required: false}
  optimization_method: {type: string, required: false}
  host_physics_model: {type: string, required: false}
  target_variable: {type: string, required: false}
  training_requirements: {type: string, required: false}
  training_resources:
    compute_time: {type: string, required: true}
    memory: {type: string, required: true}
    storage: {type: string, required: true}
    gpu: {type: string, required: true}
    cpu: {type: string, required: true}
    software: {type: string, required: true}
    # End if type == "NN"
    #
data:
  input:
    - name: {type: string, required: true}
      format: {type: string, required: true}
      extent:
        min: {type: float, required: true}
        max: {type: float, required: true}
      source: {type: string, required: true}
      quality: {type: integer, required: true}
      units: {type: string, required: true}
      precision: {type: string, required: true}
      scale: {type: float, required: true}
      offset: {type: float, required: true}
      resolution:
        spatial: {type: string, required: true}
        temporal: {type: string, required: true}
    - name: {type: string, required: true}
      format: {type: string, required: true}
      extent:
        min: {type: float, required: true}
        max: {type: float, required: true}
      source: {type: string, required: true}
      quality: {type: integer, required: true}
      units: {type: string, required: true}
      precision: {type: string, required: true}
      scale: {type: float, required: true}
      offset: {type: float, required: true}
      resolution:
        spatial: {type: string, required: true}
        temporal: {type: string, required: true}

  output:
    - name: {type: string, required: true}
      format: {type: string, required: true}
      extent:
        min: {type: float, required: true}
        max: {type: float, required: true}
      source: {type: string, required: true}
      quality: {type: integer, required: true}
      units: {type: string, required: true}
      precision: {type: string, required: true}
      scale: {type: float, required: true}
      offset: {type: float, required: true}
      resolution:
        spatial: {type: string, required: true}
        temporal: {type: string, required: true}
